{
    "openapi": "3.0.2",
    "info": {
        "title": "Service for namespace PeopleService",
        "description": "This service is located at [https://localhost/service-root/](https://localhost/service-root/)\n\n## Entity Data Model\n![ER Diagram](https://yuml.me/diagram/class/[Supplier{bg:lightslategray}],[Supplier]++-0..1[Address],[Supplier]-*>[ProductService.Product{bg:whitesmoke}],[Address],[Person{bg:lightslategray}],[Person]^[Customer{bg:lightslategray}],[Person]^[Employee{bg:lightslategray}],[PersonDetail{bg:lightslategray}],[PersonDetail]++-0..1[Address],[PersonDetail]0..1-0..1[Person],[PersonDetails%20{bg:lawngreen}]++-*>[PersonDetail],[People%20{bg:lawngreen}]++-*>[Person],[Suppliers%20{bg:lawngreen}]++-*>[Supplier])\n\n### Legend\n![Legend](https://yuml.me/diagram/plain;dir:TB;scale:60/class/[External.Type{bg:whitesmoke}],[ComplexType],[EntityType{bg:lightslategray}],[EntitySet/Singleton/Operation{bg:lawngreen}])",
        "version": ""
    },
    "servers": [
        {
            "url": "https://localhost/service-root"
        }
    ],
    "tags": [
        {
            "name": "Suppliers"
        },
        {
            "name": "People"
        },
        {
            "name": "PersonDetails"
        }
    ],
    "paths": {
        "/Suppliers": {
            "get": {
                "summary": "Get entities from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "Name",
                                    "Name desc",
                                    "Address/Street",
                                    "Address/Street desc",
                                    "Address/City",
                                    "Address/City desc",
                                    "Address/State",
                                    "Address/State desc",
                                    "Address/ZipCode",
                                    "Address/ZipCode desc",
                                    "Address/Country",
                                    "Address/Country desc",
                                    "Location",
                                    "Location desc",
                                    "Concurrency",
                                    "Concurrency desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Name",
                                    "Address",
                                    "Location",
                                    "Concurrency"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Supplier",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PeopleService.Supplier"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.Supplier-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.Supplier"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Suppliers/{ID}": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from Suppliers by key",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Name",
                                    "Address",
                                    "Location",
                                    "Concurrency"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.Supplier"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.Supplier-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Suppliers/{ID}/Products": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related Products",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Product",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "./Products.openapi3.json#/components/schemas/ProductService.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/People": {
            "get": {
                "summary": "Get entities from People",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "Name",
                                    "Name desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Name"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "PersonDetail"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Person",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PeopleService.Person"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to People",
                "tags": [
                    "People"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.Person-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.Person"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/People/{ID}": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from People by key",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Name"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "PersonDetail"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.Person"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in People",
                "tags": [
                    "People"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.Person-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from People",
                "tags": [
                    "People"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/People/{ID}/PersonDetail": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Get related PersonDetail",
                "tags": [
                    "People",
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "PersonID",
                                    "Age",
                                    "Gender",
                                    "Phone",
                                    "Address",
                                    "Photo"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Person"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.PersonDetail"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/PersonDetails": {
            "get": {
                "summary": "Get entities from PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "PersonID",
                                    "PersonID desc",
                                    "Age",
                                    "Age desc",
                                    "Gender",
                                    "Gender desc",
                                    "Phone",
                                    "Phone desc",
                                    "Address/Street",
                                    "Address/Street desc",
                                    "Address/City",
                                    "Address/City desc",
                                    "Address/State",
                                    "Address/State desc",
                                    "Address/ZipCode",
                                    "Address/ZipCode desc",
                                    "Address/Country",
                                    "Address/Country desc",
                                    "Photo",
                                    "Photo desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "PersonID",
                                    "Age",
                                    "Gender",
                                    "Phone",
                                    "Address",
                                    "Photo"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Person"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of PersonDetail",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PeopleService.PersonDetail"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.PersonDetail"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/PersonDetails/{PersonID}": {
            "parameters": [
                {
                    "description": "key: PersonID",
                    "in": "path",
                    "name": "PersonID",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from PersonDetails by key",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "PersonID",
                                    "Age",
                                    "Gender",
                                    "Phone",
                                    "Address",
                                    "Photo"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Person"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.PersonDetail"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/PersonDetails/{PersonID}/Person": {
            "parameters": [
                {
                    "description": "key: PersonID",
                    "in": "path",
                    "name": "PersonID",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Get related Person",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Name"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "PersonDetail"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleService.Person"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/$batch": {
            "post": {
                "summary": "Send a group of requests",
                "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
                "tags": [
                    "Batch Requests"
                ],
                "requestBody": {
                    "required": true,
                    "description": "Batch request",
                    "content": {
                        "multipart/mixed;boundary=request-separator": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Suppliers HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Batch response",
                        "content": {
                            "multipart/mixed": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PeopleService.Supplier": {
                "title": "Supplier",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address"
                            }
                        ],
                        "nullable": true
                    },
                    "Location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "nullable": true
                    },
                    "Concurrency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Products": {
                        "type": "array",
                        "items": {
                            "$ref": "./Products.openapi3.json#/components/schemas/ProductService.Product"
                        }
                    },
                    "Products@odata.count": {
                        "$ref": "#/components/schemas/count"
                    }
                }
            },
            "PeopleService.Supplier-create": {
                "title": "Supplier (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address-create"
                            }
                        ],
                        "nullable": true
                    },
                    "Location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "nullable": true
                    },
                    "Concurrency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Products": {
                        "type": "array",
                        "items": {
                            "$ref": "./Products.openapi3.json#/components/schemas/ProductService.Product"
                        }
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "PeopleService.Supplier-update": {
                "title": "Supplier (for update)",
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address-update"
                            }
                        ],
                        "nullable": true
                    },
                    "Location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "nullable": true
                    },
                    "Concurrency": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PeopleService.Address": {
                "title": "Address",
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true
                    },
                    "City": {
                        "type": "string",
                        "nullable": true
                    },
                    "State": {
                        "type": "string",
                        "nullable": true
                    },
                    "ZipCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "Country": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PeopleService.Address-create": {
                "title": "Address (for create)",
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true
                    },
                    "City": {
                        "type": "string",
                        "nullable": true
                    },
                    "State": {
                        "type": "string",
                        "nullable": true
                    },
                    "ZipCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "Country": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PeopleService.Address-update": {
                "title": "Address (for update)",
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true
                    },
                    "City": {
                        "type": "string",
                        "nullable": true
                    },
                    "State": {
                        "type": "string",
                        "nullable": true
                    },
                    "ZipCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "Country": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PeopleService.Person": {
                "title": "Person",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "PersonDetail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail"
                            }
                        ],
                        "nullable": true
                    }
                },
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/PeopleService.Customer"
                    },
                    {
                        "$ref": "#/components/schemas/PeopleService.Employee"
                    },
                    {}
                ]
            },
            "PeopleService.Person-create": {
                "title": "Person (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "PersonDetail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail-create"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "ID"
                ],
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/PeopleService.Customer-create"
                    },
                    {
                        "$ref": "#/components/schemas/PeopleService.Employee-create"
                    },
                    {}
                ]
            },
            "PeopleService.Person-update": {
                "title": "Person (for update)",
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/PeopleService.Customer-update"
                    },
                    {
                        "$ref": "#/components/schemas/PeopleService.Employee-update"
                    },
                    {}
                ]
            },
            "PeopleService.Customer": {
                "title": "Customer",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "PersonDetail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail"
                            }
                        ],
                        "nullable": true
                    },
                    "TotalExpense": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    }
                }
            },
            "PeopleService.Customer-create": {
                "title": "Customer (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "PersonDetail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail-create"
                            }
                        ],
                        "nullable": true
                    },
                    "TotalExpense": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "PeopleService.Customer-update": {
                "title": "Customer (for update)",
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "TotalExpense": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    }
                }
            },
            "PeopleService.Employee": {
                "title": "Employee",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "PersonDetail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail"
                            }
                        ],
                        "nullable": true
                    },
                    "EmployeeID": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42"
                    },
                    "HireDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z"
                    },
                    "Salary": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14
                    }
                }
            },
            "PeopleService.Employee-create": {
                "title": "Employee (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "PersonDetail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.PersonDetail-create"
                            }
                        ],
                        "nullable": true
                    },
                    "EmployeeID": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42"
                    },
                    "HireDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z"
                    },
                    "Salary": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "PeopleService.Employee-update": {
                "title": "Employee (for update)",
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "EmployeeID": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42"
                    },
                    "HireDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z"
                    },
                    "Salary": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14
                    }
                }
            },
            "PeopleService.PersonDetail": {
                "title": "PersonDetail",
                "type": "object",
                "properties": {
                    "PersonID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Age": {
                        "type": "integer",
                        "format": "uint8"
                    },
                    "Gender": {
                        "type": "boolean"
                    },
                    "Phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "Address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address"
                            }
                        ],
                        "nullable": true
                    },
                    "Photo": {
                        "type": "string",
                        "format": "base64url"
                    },
                    "Person": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Person"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "PeopleService.PersonDetail-create": {
                "title": "PersonDetail (for create)",
                "type": "object",
                "properties": {
                    "PersonID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Age": {
                        "type": "integer",
                        "format": "uint8"
                    },
                    "Gender": {
                        "type": "boolean"
                    },
                    "Phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "Address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address-create"
                            }
                        ],
                        "nullable": true
                    },
                    "Photo": {
                        "type": "string",
                        "format": "base64url"
                    },
                    "Person": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Person-create"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "PersonID"
                ]
            },
            "PeopleService.PersonDetail-update": {
                "title": "PersonDetail (for update)",
                "type": "object",
                "properties": {
                    "Age": {
                        "type": "integer",
                        "format": "uint8"
                    },
                    "Gender": {
                        "type": "boolean"
                    },
                    "Phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "Address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PeopleService.Address-update"
                            }
                        ],
                        "nullable": true
                    },
                    "Photo": {
                        "type": "string",
                        "format": "base64url"
                    }
                }
            },
            "geoPoint": {
                "type": "object",
                "properties": {
                    "coordinates": {
                        "$ref": "#/components/schemas/geoPosition"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Point"
                        ],
                        "default": "Point"
                    }
                },
                "required": [
                    "type",
                    "coordinates"
                ]
            },
            "geoPosition": {
                "type": "array",
                "minItems": 2,
                "items": {
                    "type": "number"
                }
            },
            "count": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
            },
            "error": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "type": "object",
                        "required": [
                            "code",
                            "message"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "target": {
                                "type": "string"
                            },
                            "details": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "target": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "innererror": {
                                "type": "object",
                                "description": "The structure of this object is service-specific"
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "top": {
                "name": "$top",
                "in": "query",
                "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "example": 50
            },
            "skip": {
                "name": "$skip",
                "in": "query",
                "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "count": {
                "name": "$count",
                "in": "query",
                "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
                "schema": {
                    "type": "boolean"
                }
            },
            "search": {
                "name": "$search",
                "in": "query",
                "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "error": {
                "description": "Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                }
            }
        }
    }
}