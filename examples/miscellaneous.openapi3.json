{
    "openapi": "3.0.2",
    "info": {
        "title": "Examples from Part 3: CSDL",
        "description": "This service is located at [https://localhost/service-root/](https://localhost/service-root/)\n\n## Entity Data Model\n![ER Diagram](https://yuml.me/diagram/class/[Measurement],[Example7to11],[Product{bg:lightslategray}],[Product]*-[Category],[Product]-0..1>[Supplier],[Supplier{bg:lightslategray}],[Customer{bg:lightslategray}],[Order{bg:lightslategray}],[Category{bg:lightslategray}],[Employee{bg:lightslategray}],[Employee]-0..1>[Manager],[Employee]^[Manager{bg:lightslategray}],[Manager]-*>[Employee],[Category17{bg:lightslategray}],[Category18{bg:lightslategray}],[Category18]++-[EntityInfo],[EntityInfo],[OrderLine{bg:lightslategray}],[Dimensions],[Product22{bg:lightslategray}],[Product22]++-0..1[Dimensions],[Product22]++-0..1[Dimensions],[ShipmentBox{bg:lightslategray}],[ShipmentBox]++-0..1[Dimensions],[Size],[Size]++-0..1[Length],[Size]++-0..1[Weight],[Product2{bg:lightslategray}],[NullablePrimitiveTypes],[NullablePrimitiveTypes]++-0..1[Color],[NullablePrimitiveTypes]++-0..1[IntegerDecimal],[NonNullablePrimitiveTypes],[NonNullablePrimitiveTypes]++-[Color],[NonNullablePrimitiveTypes]++-[IntegerDecimal],[NonNullablePrimitiveTypes]++-[Text],[Weird{bg:lightslategray}],[Weird]++-[Core.Permission{bg:whitesmoke}],[Weird]++-0..1[Core.Permission{bg:whitesmoke}],[Address],[Address]-0..1>[City],[Address]-0..1>[Region],[Address]-0..1>[Country],[City{bg:lightslategray}],[Region{bg:lightslategray}],[Country{bg:lightslategray}],[Planet{bg:lightslategray}],[NavigationOnly],[NavigationOnly]-0..1>[Planet],[AnnotationOnly],[Order{bg:lightslategray}],[PersonType],[MovieType],[FriendType{bg:lightslategray}],[PersonType]^[DeveloperType],[ScrumTeamType],[ScrumTeamType]++-0..1[DeveloperType],[MovieType]^[ArchivedMovieType],[SomeThingType],[SomeThingType]++-*[PersonType],[SomeThingType]-*>[FriendType],[ChangeTrackingType],[Categories35%20{bg:lawngreen}]++-*>[Category],[Categories34%20{bg:lawngreen}]++-*>[Category],[ProductsByRating{bg:lawngreen}]-*>[Product],[LeaveRequestApproval{bg:lawngreen}],[MainSupplier%20{bg:lawngreen}]++->[Supplier],[Suppliers%20{bg:lawngreen}]++-*>[Supplier],[Categories%20{bg:lawngreen}]++-*>[Category],[Products%20{bg:lawngreen}]++-*>[Product],[TopSellingProducts{bg:lawngreen}]-*>[Product],[Orders%20{bg:lawngreen}]++-*>[Order],[PreferredCustomers%20{bg:lawngreen}]++-*>[Customer],[StandardCustomers%20{bg:lawngreen}]++-*>[Customer])\n\n### Legend\n![Legend](https://yuml.me/diagram/plain;dir:TB;scale:60/class/[External.Type{bg:whitesmoke}],[ComplexType],[EntityType{bg:lightslategray}],[EntitySet/Singleton/Operation{bg:lawngreen}])",
        "version": ""
    },
    "servers": [
        {
            "url": "https://localhost/service-root"
        }
    ],
    "tags": [
        {
            "name": "StandardCustomers"
        },
        {
            "name": "PreferredCustomers"
        },
        {
            "name": "Orders"
        },
        {
            "name": "Products"
        },
        {
            "name": "Categories"
        },
        {
            "name": "Suppliers"
        },
        {
            "name": "MainSupplier"
        },
        {
            "name": "Categories34"
        },
        {
            "name": "Categories35"
        }
    ],
    "paths": {
        "/StandardCustomers": {
            "get": {
                "summary": "Get entities from StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Customer",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Customer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Customer-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Customer"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/StandardCustomers('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from StandardCustomers by key",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Customer"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Customer-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/PreferredCustomers": {
            "get": {
                "summary": "Get entities from PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Customer",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Customer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Customer-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Customer"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/PreferredCustomers('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from PreferredCustomers by key",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Customer"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Customer-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Orders": {
            "get": {
                "summary": "Get entities from Orders",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Order",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Order"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Orders",
                "tags": [
                    "Orders"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Order-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Order"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Orders({ID})": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from Orders by key",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Order"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Orders",
                "tags": [
                    "Orders"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Order-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Orders",
                "tags": [
                    "Orders"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TopSellingProducts(Year='{Year}')": {
            "get": {
                "summary": "Return the top-selling products for a given year",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "required": true,
                        "description": "Year in form YYYY",
                        "in": "path",
                        "name": "Year",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "format": "decimal",
                            "example": 0,
                            "multipleOf": 1,
                            "maximum": 9999,
                            "minimum": -9999,
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Product",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "description": "The response uses server-driven paging"
            }
        },
        "/Products": {
            "get": {
                "summary": "Get entities from Products",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "CategoryID",
                                    "CategoryID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "CategoryID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Category",
                                    "Supplier"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Product",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Products",
                "tags": [
                    "Products"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Product-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Product"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Products/M1.BestSelling()": {
            "get": {
                "summary": "Return the best-selling product in the given collection",
                "tags": [
                    "Products"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Product"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Products/M1.Replenish": {
            "post": {
                "summary": "Replenish stock for products in the given collection",
                "tags": [
                    "Products"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Products('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from Products by key",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "CategoryID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Category",
                                    "Supplier"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Product"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Products",
                "tags": [
                    "Products"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Product-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Products",
                "tags": [
                    "Products"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Products('{ID}')/Category": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get related Category",
                "tags": [
                    "Products",
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Products('{ID}')/Supplier": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get related Supplier",
                "tags": [
                    "Products",
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Supplier"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories": {
            "get": {
                "summary": "Get entities from Categories",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Category",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Categories",
                "tags": [
                    "Categories"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from Categories by key",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Categories",
                "tags": [
                    "Categories"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Categories",
                "tags": [
                    "Categories"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories('{ID}')/Products": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related Products",
                "tags": [
                    "Categories",
                    "Products"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "CategoryID",
                                    "CategoryID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "CategoryID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Category",
                                    "Supplier"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Product",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related Products",
                "tags": [
                    "Categories",
                    "Products"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Product-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Product"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories('{ID}')/Products/M1.BestSelling()": {
            "get": {
                "summary": "Return the best-selling product in the given collection",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "description": "key: ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Product"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories('{ID}')/Products/M1.Replenish": {
            "post": {
                "summary": "Replenish stock for products in the given collection",
                "tags": [
                    "Categories"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "parameters": [
                    {
                        "description": "key: ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/Suppliers": {
            "get": {
                "summary": "Get entities from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Supplier",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Supplier"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Supplier-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Supplier"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Suppliers('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from Suppliers by key",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Supplier"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Supplier-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/MainSupplier": {
            "get": {
                "summary": "Get MainSupplier",
                "tags": [
                    "MainSupplier"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Supplier"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update MainSupplier",
                "tags": [
                    "MainSupplier"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Supplier-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/LeaveRequestApproval": {
            "post": {
                "summary": "Invoke action Approval",
                "tags": [
                    "Service Operations"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/ProductsByRating(Rating='{Rating}')": {
            "get": {
                "summary": "Invoke function ProductsByRating",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "name": "Rating",
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "format": "decimal",
                            "example": 0,
                            "multipleOf": 1,
                            "maximum": 9999,
                            "minimum": -9999,
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Product",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories34": {
            "get": {
                "summary": "Get entities from Categories34",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Category",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Categories34",
                "tags": [
                    "Categories34"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories34('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from Categories34 by key",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Categories34",
                "tags": [
                    "Categories34"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Categories34",
                "tags": [
                    "Categories34"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories34('{ID}')/Products": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related Products",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "CategoryID",
                                    "CategoryID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "CategoryID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Category",
                                    "Supplier"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Product",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories34('{ID}')/Products/M1.BestSelling()": {
            "get": {
                "summary": "Return the best-selling product in the given collection",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "description": "key: ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Product"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories34('{ID}')/Products/M1.Replenish": {
            "post": {
                "summary": "Replenish stock for products in the given collection",
                "tags": [
                    "Categories34"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "parameters": [
                    {
                        "description": "key: ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/Categories35": {
            "get": {
                "summary": "Get entities from Categories35",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Category",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Categories35",
                "tags": [
                    "Categories35"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories35('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from Categories35 by key",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Products"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Category"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Categories35",
                "tags": [
                    "Categories35"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/org.example.Category-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Categories35",
                "tags": [
                    "Categories35"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories35('{ID}')/Products": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related Products",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "CategoryID",
                                    "CategoryID desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "CategoryID"
                                ]
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "Category",
                                    "Supplier"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of Product",
                                    "properties": {
                                        "@odata.count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/org.example.Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories35('{ID}')/Products/M1.BestSelling()": {
            "get": {
                "summary": "Return the best-selling product in the given collection",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "description": "key: ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/org.example.Product"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/Categories35('{ID}')/Products/M1.Replenish": {
            "post": {
                "summary": "Replenish stock for products in the given collection",
                "tags": [
                    "Categories35"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "parameters": [
                    {
                        "description": "key: ID",
                        "in": "path",
                        "name": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/$batch": {
            "post": {
                "summary": "Send a group of requests",
                "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
                "tags": [
                    "Batch Requests"
                ],
                "requestBody": {
                    "required": true,
                    "description": "Batch request",
                    "content": {
                        "multipart/mixed;boundary=request-separator": {
                            "schema": {
                                "type": "string"
                            },
                            "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET StandardCustomers HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Batch response",
                        "content": {
                            "multipart/mixed": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "org.example.Measurement": {
                "title": "Measurement",
                "type": "object",
                "properties": {
                    "Dimension": {
                        "type": "string",
                        "maxLength": 50,
                        "default": "Unspecified"
                    },
                    "Length": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.01
                    }
                }
            },
            "org.example.Measurement-create": {
                "title": "Measurement (for create)",
                "type": "object",
                "properties": {
                    "Dimension": {
                        "type": "string",
                        "maxLength": 50,
                        "default": "Unspecified"
                    },
                    "Length": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.01
                    }
                }
            },
            "org.example.Measurement-update": {
                "title": "Measurement (for update)",
                "type": "object",
                "properties": {
                    "Dimension": {
                        "type": "string",
                        "maxLength": 50,
                        "default": "Unspecified"
                    },
                    "Length": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.01
                    }
                }
            },
            "org.example.Example7to11": {
                "title": "Example7to11",
                "type": "object",
                "properties": {
                    "Units": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "SuggestedTimes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-04-13T15:51:04.000000Z"
                        }
                    },
                    "Amount9": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.01,
                        "maximum": 9.99,
                        "minimum": -9.99,
                        "nullable": true
                    },
                    "Amount11": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "maximum": 999,
                        "minimum": -999,
                        "nullable": true
                    }
                }
            },
            "org.example.Example7to11-create": {
                "title": "Example7to11 (for create)",
                "type": "object",
                "properties": {
                    "Units": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "SuggestedTimes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-04-13T15:51:04.000000Z"
                        }
                    },
                    "Amount9": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.01,
                        "maximum": 9.99,
                        "minimum": -9.99,
                        "nullable": true
                    },
                    "Amount11": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "maximum": 999,
                        "minimum": -999,
                        "nullable": true
                    }
                }
            },
            "org.example.Example7to11-update": {
                "title": "Example7to11 (for update)",
                "type": "object",
                "properties": {
                    "Units": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "SuggestedTimes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-04-13T15:51:04.000000Z"
                        }
                    },
                    "Amount9": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.01,
                        "maximum": 9.99,
                        "minimum": -9.99,
                        "nullable": true
                    },
                    "Amount11": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "maximum": 999,
                        "minimum": -999,
                        "nullable": true
                    }
                }
            },
            "org.example.Product": {
                "title": "Product",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "CategoryID": {
                        "type": "string"
                    },
                    "Category": {
                        "$ref": "#/components/schemas/org.example.Category"
                    },
                    "Supplier": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Supplier"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "org.example.Product-create": {
                "title": "Product (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "CategoryID": {
                        "type": "string"
                    },
                    "Category": {
                        "$ref": "#/components/schemas/org.example.Category-create"
                    },
                    "Supplier": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Supplier-create"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.Product-update": {
                "title": "Product (for update)",
                "type": "object",
                "properties": {
                    "CategoryID": {
                        "type": "string"
                    }
                }
            },
            "org.example.Supplier": {
                "title": "Supplier",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    }
                }
            },
            "org.example.Supplier-create": {
                "title": "Supplier (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.Supplier-update": {
                "title": "Supplier (for update)",
                "type": "object"
            },
            "org.example.Customer": {
                "title": "Customer",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    }
                }
            },
            "org.example.Customer-create": {
                "title": "Customer (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.Customer-update": {
                "title": "Customer (for update)",
                "type": "object"
            },
            "org.example.Order": {
                "title": "Order",
                "type": "object",
                "properties": {
                    "ID": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42"
                    }
                }
            },
            "org.example.Order-create": {
                "title": "Order (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42"
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.Order-update": {
                "title": "Order (for update)",
                "type": "object"
            },
            "org.example.Category": {
                "title": "Category",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/org.example.Product"
                        }
                    },
                    "Products@odata.count": {
                        "$ref": "#/components/schemas/count"
                    }
                }
            },
            "org.example.Category-create": {
                "title": "Category (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/org.example.Product-create"
                        }
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.Category-update": {
                "title": "Category (for update)",
                "type": "object"
            },
            "org.example.Employee": {
                "title": "Employee",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "FirstName": {
                        "type": "string"
                    },
                    "LastName": {
                        "type": "string"
                    },
                    "Manager": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Manager"
                            }
                        ],
                        "nullable": true
                    }
                },
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/org.example.Manager"
                    },
                    {}
                ]
            },
            "org.example.Employee-create": {
                "title": "Employee (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "FirstName": {
                        "type": "string"
                    },
                    "LastName": {
                        "type": "string"
                    },
                    "Manager": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Manager-create"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "ID"
                ],
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/org.example.Manager-create"
                    },
                    {}
                ]
            },
            "org.example.Employee-update": {
                "title": "Employee (for update)",
                "type": "object",
                "properties": {
                    "FirstName": {
                        "type": "string"
                    },
                    "LastName": {
                        "type": "string"
                    }
                },
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/org.example.Manager-update"
                    },
                    {}
                ]
            },
            "org.example.Manager": {
                "title": "Manager",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "FirstName": {
                        "type": "string"
                    },
                    "LastName": {
                        "type": "string"
                    },
                    "Manager": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Manager"
                            }
                        ],
                        "nullable": true
                    },
                    "AnnualBudget": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1,
                        "nullable": true
                    },
                    "Employees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/org.example.Employee"
                        }
                    },
                    "Employees@odata.count": {
                        "$ref": "#/components/schemas/count"
                    }
                }
            },
            "org.example.Manager-create": {
                "title": "Manager (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "FirstName": {
                        "type": "string"
                    },
                    "LastName": {
                        "type": "string"
                    },
                    "Manager": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Manager-create"
                            }
                        ],
                        "nullable": true
                    },
                    "AnnualBudget": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1,
                        "nullable": true
                    },
                    "Employees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/org.example.Employee-create"
                        }
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.Manager-update": {
                "title": "Manager (for update)",
                "type": "object",
                "properties": {
                    "FirstName": {
                        "type": "string"
                    },
                    "LastName": {
                        "type": "string"
                    },
                    "AnnualBudget": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1,
                        "nullable": true
                    }
                }
            },
            "org.example.Category17": {
                "title": "Category17",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "org.example.Category17-create": {
                "title": "Category17 (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.Category17-update": {
                "title": "Category17 (for update)",
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "org.example.Category18": {
                "title": "Category18",
                "type": "object",
                "properties": {
                    "Info": {
                        "$ref": "#/components/schemas/org.example.EntityInfo"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "org.example.Category18-create": {
                "title": "Category18 (for create)",
                "type": "object",
                "properties": {
                    "Info": {
                        "$ref": "#/components/schemas/org.example.EntityInfo-create"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "org.example.Category18-update": {
                "title": "Category18 (for update)",
                "type": "object",
                "properties": {
                    "Info": {
                        "$ref": "#/components/schemas/org.example.EntityInfo-update"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "org.example.EntityInfo": {
                "title": "EntityInfo",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "nullable": true
                    }
                }
            },
            "org.example.EntityInfo-create": {
                "title": "EntityInfo (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "nullable": true
                    }
                }
            },
            "org.example.EntityInfo-update": {
                "title": "EntityInfo (for update)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "nullable": true
                    }
                }
            },
            "org.example.OrderLine": {
                "title": "OrderLine",
                "type": "object",
                "properties": {
                    "OrderID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LineNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "org.example.OrderLine-create": {
                "title": "OrderLine (for create)",
                "type": "object",
                "properties": {
                    "OrderID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LineNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": [
                    "OrderID",
                    "LineNumber"
                ]
            },
            "org.example.OrderLine-update": {
                "title": "OrderLine (for update)",
                "type": "object"
            },
            "org.example.Dimensions": {
                "title": "Dimensions",
                "type": "object",
                "properties": {
                    "Height": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    },
                    "Weight": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    },
                    "Length": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    }
                }
            },
            "org.example.Dimensions-create": {
                "title": "Dimensions (for create)",
                "type": "object",
                "properties": {
                    "Height": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    },
                    "Weight": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    },
                    "Length": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    }
                }
            },
            "org.example.Dimensions-update": {
                "title": "Dimensions (for update)",
                "type": "object",
                "properties": {
                    "Height": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    },
                    "Weight": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    },
                    "Length": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1
                    }
                }
            },
            "org.example.Product22": {
                "title": "Product22",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "ProductDimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Dimensions"
                            }
                        ],
                        "nullable": true
                    },
                    "ShippingDimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Dimensions"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "org.example.Product22-create": {
                "title": "Product22 (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "ProductDimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Dimensions-create"
                            }
                        ],
                        "nullable": true
                    },
                    "ShippingDimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Dimensions-create"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.Product22-update": {
                "title": "Product22 (for update)",
                "type": "object",
                "properties": {
                    "ProductDimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Dimensions-update"
                            }
                        ],
                        "nullable": true
                    },
                    "ShippingDimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Dimensions-update"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "org.example.ShipmentBox": {
                "title": "ShipmentBox",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Dimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Dimensions"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "org.example.ShipmentBox-create": {
                "title": "ShipmentBox (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Dimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Dimensions-create"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.ShipmentBox-update": {
                "title": "ShipmentBox (for update)",
                "type": "object",
                "properties": {
                    "Dimensions": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Dimensions-update"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "org.example.FileAccess": {
                "type": "string",
                "title": "FileAccess",
                "enum": [
                    "Read",
                    "Write",
                    "Create",
                    "Delete"
                ]
            },
            "org.example.ShippingMethod": {
                "type": "string",
                "title": "Method of shipping",
                "enum": [
                    "FirstClass",
                    "TwoDay",
                    "Overnight"
                ]
            },
            "org.example.Pattern": {
                "type": "string",
                "title": "Pattern",
                "enum": [
                    "Plain",
                    "Red",
                    "Blue",
                    "Yellow",
                    "Solid",
                    "Striped",
                    "SolidRed",
                    "SolidBlue",
                    "SolidYellow",
                    "RedBlueStriped",
                    "RedYellowStriped",
                    "BlueYellowStriped"
                ]
            },
            "org.example.Length": {
                "type": "integer",
                "format": "int32",
                "title": "Length"
            },
            "org.example.Weight": {
                "type": "integer",
                "format": "int32",
                "title": "Weight"
            },
            "org.example.Size": {
                "title": "Size",
                "type": "object",
                "properties": {
                    "Height": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Length"
                            }
                        ],
                        "nullable": true
                    },
                    "Weight": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Weight"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "org.example.Size-create": {
                "title": "Size (for create)",
                "type": "object",
                "properties": {
                    "Height": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Length"
                            }
                        ],
                        "nullable": true
                    },
                    "Weight": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Weight"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "org.example.Size-update": {
                "title": "Size (for update)",
                "type": "object",
                "properties": {
                    "Height": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Length"
                            }
                        ],
                        "nullable": true
                    },
                    "Weight": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/org.example.Weight"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "org.example.Product2": {
                "title": "Product2",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "org.example.Product2-create": {
                "title": "Product2 (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "org.example.Product2-update": {
                "title": "Product2 (for update)",
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "nullable": true
                    },
                    "Description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Model1.NullablePrimitiveTypes": {
                "title": "NullablePrimitiveTypes",
                "type": "object",
                "properties": {
                    "NullValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": null
                    },
                    "TrueValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": true
                    },
                    "FalseValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": false
                    },
                    "BinaryValue": {
                        "type": "string",
                        "format": "base64url",
                        "maxLength": 42,
                        "nullable": true,
                        "default": "T0RhdGE"
                    },
                    "IntegerValue": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "default": -128
                    },
                    "DoubleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "double",
                        "example": 3.14,
                        "nullable": true,
                        "default": 3.141592653589793
                    },
                    "SingleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14,
                        "nullable": true
                    },
                    "DecimalValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "nullable": true,
                        "default": 34.95
                    },
                    "StringValue": {
                        "type": "string",
                        "nullable": true,
                        "default": "Say \"Hello\",\nthen go"
                    },
                    "DateValue": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "nullable": true,
                        "default": "2012-12-03"
                    },
                    "DateTimeOffsetValue": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "nullable": true,
                        "default": "2012-12-03T07:16:23Z"
                    },
                    "DurationValue": {
                        "type": "string",
                        "format": "duration",
                        "example": "P4DT15H51M04S",
                        "nullable": true,
                        "default": "P12DT23H59M59.999999999999S"
                    },
                    "TimeOfDayValue": {
                        "type": "string",
                        "format": "time",
                        "example": "15:51:04",
                        "nullable": true,
                        "default": "07:59:59.999"
                    },
                    "GuidValue": {
                        "type": "string",
                        "format": "uuid",
                        "example": "01234567-89ab-cdef-0123-456789abcdef",
                        "nullable": true,
                        "default": "01234567-89ab-cdef-0123-456789abcdef"
                    },
                    "Int64Value": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42",
                        "nullable": true,
                        "default": 0
                    },
                    "ColorEnumValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Color"
                            }
                        ],
                        "nullable": true,
                        "default": "yellow"
                    },
                    "GeographyPoint": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "nullable": true,
                        "default": "SRID=0;Point(142.1 64.1)"
                    },
                    "StreamValue": {
                        "type": "string",
                        "format": "base64url",
                        "nullable": true
                    },
                    "TypeDefValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.IntegerDecimal"
                            }
                        ],
                        "nullable": true,
                        "default": 42
                    },
                    "PrimitiveValue": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Model1.NullablePrimitiveTypes-create": {
                "title": "NullablePrimitiveTypes (for create)",
                "type": "object",
                "properties": {
                    "NullValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": null
                    },
                    "TrueValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": true
                    },
                    "FalseValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": false
                    },
                    "BinaryValue": {
                        "type": "string",
                        "format": "base64url",
                        "maxLength": 42,
                        "nullable": true,
                        "default": "T0RhdGE"
                    },
                    "IntegerValue": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "default": -128
                    },
                    "DoubleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "double",
                        "example": 3.14,
                        "nullable": true,
                        "default": 3.141592653589793
                    },
                    "SingleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14,
                        "nullable": true
                    },
                    "DecimalValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "nullable": true,
                        "default": 34.95
                    },
                    "StringValue": {
                        "type": "string",
                        "nullable": true,
                        "default": "Say \"Hello\",\nthen go"
                    },
                    "DateValue": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "nullable": true,
                        "default": "2012-12-03"
                    },
                    "DateTimeOffsetValue": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "nullable": true,
                        "default": "2012-12-03T07:16:23Z"
                    },
                    "DurationValue": {
                        "type": "string",
                        "format": "duration",
                        "example": "P4DT15H51M04S",
                        "nullable": true,
                        "default": "P12DT23H59M59.999999999999S"
                    },
                    "TimeOfDayValue": {
                        "type": "string",
                        "format": "time",
                        "example": "15:51:04",
                        "nullable": true,
                        "default": "07:59:59.999"
                    },
                    "GuidValue": {
                        "type": "string",
                        "format": "uuid",
                        "example": "01234567-89ab-cdef-0123-456789abcdef",
                        "nullable": true,
                        "default": "01234567-89ab-cdef-0123-456789abcdef"
                    },
                    "Int64Value": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42",
                        "nullable": true,
                        "default": 0
                    },
                    "ColorEnumValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Color"
                            }
                        ],
                        "nullable": true,
                        "default": "yellow"
                    },
                    "GeographyPoint": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "nullable": true,
                        "default": "SRID=0;Point(142.1 64.1)"
                    },
                    "StreamValue": {
                        "type": "string",
                        "format": "base64url",
                        "nullable": true
                    },
                    "TypeDefValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.IntegerDecimal"
                            }
                        ],
                        "nullable": true,
                        "default": 42
                    },
                    "PrimitiveValue": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Model1.NullablePrimitiveTypes-update": {
                "title": "NullablePrimitiveTypes (for update)",
                "type": "object",
                "properties": {
                    "NullValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": null
                    },
                    "TrueValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": true
                    },
                    "FalseValue": {
                        "type": "boolean",
                        "nullable": true,
                        "default": false
                    },
                    "BinaryValue": {
                        "type": "string",
                        "format": "base64url",
                        "maxLength": 42,
                        "nullable": true,
                        "default": "T0RhdGE"
                    },
                    "IntegerValue": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "default": -128
                    },
                    "DoubleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "double",
                        "example": 3.14,
                        "nullable": true,
                        "default": 3.141592653589793
                    },
                    "SingleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14,
                        "nullable": true
                    },
                    "DecimalValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "nullable": true,
                        "default": 34.95
                    },
                    "StringValue": {
                        "type": "string",
                        "nullable": true,
                        "default": "Say \"Hello\",\nthen go"
                    },
                    "DateValue": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "nullable": true,
                        "default": "2012-12-03"
                    },
                    "DateTimeOffsetValue": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "nullable": true,
                        "default": "2012-12-03T07:16:23Z"
                    },
                    "DurationValue": {
                        "type": "string",
                        "format": "duration",
                        "example": "P4DT15H51M04S",
                        "nullable": true,
                        "default": "P12DT23H59M59.999999999999S"
                    },
                    "TimeOfDayValue": {
                        "type": "string",
                        "format": "time",
                        "example": "15:51:04",
                        "nullable": true,
                        "default": "07:59:59.999"
                    },
                    "GuidValue": {
                        "type": "string",
                        "format": "uuid",
                        "example": "01234567-89ab-cdef-0123-456789abcdef",
                        "nullable": true,
                        "default": "01234567-89ab-cdef-0123-456789abcdef"
                    },
                    "Int64Value": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42",
                        "nullable": true,
                        "default": 0
                    },
                    "ColorEnumValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Color"
                            }
                        ],
                        "nullable": true,
                        "default": "yellow"
                    },
                    "GeographyPoint": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "nullable": true,
                        "default": "SRID=0;Point(142.1 64.1)"
                    },
                    "StreamValue": {
                        "type": "string",
                        "format": "base64url",
                        "nullable": true
                    },
                    "TypeDefValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.IntegerDecimal"
                            }
                        ],
                        "nullable": true,
                        "default": 42
                    },
                    "PrimitiveValue": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Model1.NonNullablePrimitiveTypes": {
                "title": "NonNullablePrimitiveTypes",
                "type": "object",
                "properties": {
                    "NullValue": {
                        "type": "boolean",
                        "default": null
                    },
                    "TrueValue": {
                        "type": "boolean",
                        "default": true
                    },
                    "FalseValue": {
                        "type": "boolean",
                        "default": false
                    },
                    "BinaryValue": {
                        "type": "string",
                        "format": "base64url",
                        "maxLength": 42,
                        "default": "T0RhdGE"
                    },
                    "IntegerValue": {
                        "type": "integer",
                        "format": "int32",
                        "default": -128
                    },
                    "DoubleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "double",
                        "example": 3.14,
                        "default": 3.141592653589793
                    },
                    "SingleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14,
                        "default": "-INF"
                    },
                    "DecimalValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "default": 34.95
                    },
                    "StringValue": {
                        "type": "string",
                        "default": "Say \"Hello\",\nthen go"
                    },
                    "DateValue": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "default": "2012-12-03"
                    },
                    "DateTimeOffsetValue": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "default": "2012-12-03T07:16:23Z"
                    },
                    "DurationValue": {
                        "type": "string",
                        "format": "duration",
                        "example": "P4DT15H51M04S",
                        "default": "P12DT23H59M59.999999999999S"
                    },
                    "TimeOfDayValue": {
                        "type": "string",
                        "format": "time",
                        "example": "15:51:04",
                        "default": "07:59:59.999"
                    },
                    "GuidValue": {
                        "type": "string",
                        "format": "uuid",
                        "example": "01234567-89ab-cdef-0123-456789abcdef",
                        "default": "01234567-89ab-cdef-0123-456789abcdef"
                    },
                    "Int64Value": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42",
                        "default": 0
                    },
                    "ColorEnumValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Color"
                            }
                        ],
                        "default": "yellow"
                    },
                    "GeographyPoint": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "default": "SRID=0;Point(142.1 64.1)"
                    },
                    "StreamValue": {
                        "type": "string",
                        "format": "base64url"
                    },
                    "TypeDefValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.IntegerDecimal"
                            }
                        ],
                        "default": 42
                    },
                    "TextValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Text"
                            }
                        ],
                        "maxLength": 60,
                        "default": 42
                    },
                    "PrimitiveValue": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                }
            },
            "Model1.NonNullablePrimitiveTypes-create": {
                "title": "NonNullablePrimitiveTypes (for create)",
                "type": "object",
                "properties": {
                    "NullValue": {
                        "type": "boolean",
                        "default": null
                    },
                    "TrueValue": {
                        "type": "boolean",
                        "default": true
                    },
                    "FalseValue": {
                        "type": "boolean",
                        "default": false
                    },
                    "BinaryValue": {
                        "type": "string",
                        "format": "base64url",
                        "maxLength": 42,
                        "default": "T0RhdGE"
                    },
                    "IntegerValue": {
                        "type": "integer",
                        "format": "int32",
                        "default": -128
                    },
                    "DoubleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "double",
                        "example": 3.14,
                        "default": 3.141592653589793
                    },
                    "SingleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14,
                        "default": "-INF"
                    },
                    "DecimalValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "default": 34.95
                    },
                    "StringValue": {
                        "type": "string",
                        "default": "Say \"Hello\",\nthen go"
                    },
                    "DateValue": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "default": "2012-12-03"
                    },
                    "DateTimeOffsetValue": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "default": "2012-12-03T07:16:23Z"
                    },
                    "DurationValue": {
                        "type": "string",
                        "format": "duration",
                        "example": "P4DT15H51M04S",
                        "default": "P12DT23H59M59.999999999999S"
                    },
                    "TimeOfDayValue": {
                        "type": "string",
                        "format": "time",
                        "example": "15:51:04",
                        "default": "07:59:59.999"
                    },
                    "GuidValue": {
                        "type": "string",
                        "format": "uuid",
                        "example": "01234567-89ab-cdef-0123-456789abcdef",
                        "default": "01234567-89ab-cdef-0123-456789abcdef"
                    },
                    "Int64Value": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42",
                        "default": 0
                    },
                    "ColorEnumValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Color"
                            }
                        ],
                        "default": "yellow"
                    },
                    "GeographyPoint": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "default": "SRID=0;Point(142.1 64.1)"
                    },
                    "StreamValue": {
                        "type": "string",
                        "format": "base64url"
                    },
                    "TypeDefValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.IntegerDecimal"
                            }
                        ],
                        "default": 42
                    },
                    "TextValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Text"
                            }
                        ],
                        "maxLength": 60,
                        "default": 42
                    },
                    "PrimitiveValue": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                }
            },
            "Model1.NonNullablePrimitiveTypes-update": {
                "title": "NonNullablePrimitiveTypes (for update)",
                "type": "object",
                "properties": {
                    "NullValue": {
                        "type": "boolean",
                        "default": null
                    },
                    "TrueValue": {
                        "type": "boolean",
                        "default": true
                    },
                    "FalseValue": {
                        "type": "boolean",
                        "default": false
                    },
                    "BinaryValue": {
                        "type": "string",
                        "format": "base64url",
                        "maxLength": 42,
                        "default": "T0RhdGE"
                    },
                    "IntegerValue": {
                        "type": "integer",
                        "format": "int32",
                        "default": -128
                    },
                    "DoubleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "double",
                        "example": 3.14,
                        "default": 3.141592653589793
                    },
                    "SingleValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "float",
                        "example": 3.14,
                        "default": "-INF"
                    },
                    "DecimalValue": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "default": 34.95
                    },
                    "StringValue": {
                        "type": "string",
                        "default": "Say \"Hello\",\nthen go"
                    },
                    "DateValue": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "default": "2012-12-03"
                    },
                    "DateTimeOffsetValue": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z",
                        "default": "2012-12-03T07:16:23Z"
                    },
                    "DurationValue": {
                        "type": "string",
                        "format": "duration",
                        "example": "P4DT15H51M04S",
                        "default": "P12DT23H59M59.999999999999S"
                    },
                    "TimeOfDayValue": {
                        "type": "string",
                        "format": "time",
                        "example": "15:51:04",
                        "default": "07:59:59.999"
                    },
                    "GuidValue": {
                        "type": "string",
                        "format": "uuid",
                        "example": "01234567-89ab-cdef-0123-456789abcdef",
                        "default": "01234567-89ab-cdef-0123-456789abcdef"
                    },
                    "Int64Value": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "int64",
                        "example": "42",
                        "default": 0
                    },
                    "ColorEnumValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Color"
                            }
                        ],
                        "default": "yellow"
                    },
                    "GeographyPoint": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "default": "SRID=0;Point(142.1 64.1)"
                    },
                    "StreamValue": {
                        "type": "string",
                        "format": "base64url"
                    },
                    "TypeDefValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.IntegerDecimal"
                            }
                        ],
                        "default": 42
                    },
                    "TextValue": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Text"
                            }
                        ],
                        "maxLength": 60,
                        "default": 42
                    },
                    "PrimitiveValue": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                }
            },
            "Model1.Size": {
                "type": "string",
                "title": "T-Shirt Size",
                "enum": [
                    "S",
                    "M",
                    "L"
                ],
                "description": "Size, expressed with letters familiar from e.g. T-Shirt sizes"
            },
            "Model1.Color": {
                "type": "string",
                "title": "Color",
                "enum": [
                    "Yellow",
                    "Striped"
                ]
            },
            "Model1.Weird": {
                "title": "Weird",
                "type": "object",
                "properties": {
                    "TheKey": {
                        "type": "string",
                        "pattern": ".+"
                    },
                    "TheValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "TheString": {
                        "type": "string",
                        "maxLength": 20,
                        "enum": [
                            "success",
                            "info",
                            "warning",
                            "error"
                        ],
                        "nullable": true
                    },
                    "Tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "Dates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-04-13",
                            "nullable": true
                        }
                    },
                    "Price": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.001,
                        "maximum": 999999999999.999,
                        "minimum": 0,
                        "nullable": true
                    },
                    "Quantity": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.001,
                        "maximum": 999999999999.999,
                        "minimum": 0,
                        "nullable": true,
                        "exclusiveMinimum": true
                    },
                    "PercentComplete": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1,
                        "maximum": 100,
                        "minimum": 0,
                        "nullable": true
                    },
                    "PercentOfLightSpeed": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "nullable": true,
                        "maximum": 100,
                        "exclusiveMaximum": true,
                        "minimum": 0
                    },
                    "Permission": {
                        "$ref": "/vocabularies/Org.OData.Core.V1.openapi3.json#/components/schemas/Org.OData.Core.V1.Permission"
                    },
                    "AliasPermission": {
                        "anyOf": [
                            {
                                "$ref": "/vocabularies/Org.OData.Core.V1.openapi3.json#/components/schemas/Org.OData.Core.V1.Permission"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Model1.Weird-create": {
                "title": "Weird (for create)",
                "type": "object",
                "properties": {
                    "TheKey": {
                        "type": "string",
                        "pattern": ".+"
                    },
                    "TheValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "TheString": {
                        "type": "string",
                        "maxLength": 20,
                        "enum": [
                            "success",
                            "info",
                            "warning",
                            "error"
                        ],
                        "nullable": true
                    },
                    "Tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "Dates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-04-13",
                            "nullable": true
                        }
                    },
                    "Price": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.001,
                        "maximum": 999999999999.999,
                        "minimum": 0,
                        "nullable": true
                    },
                    "Quantity": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.001,
                        "maximum": 999999999999.999,
                        "minimum": 0,
                        "nullable": true,
                        "exclusiveMinimum": true
                    },
                    "PercentComplete": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1,
                        "maximum": 100,
                        "minimum": 0,
                        "nullable": true
                    },
                    "PercentOfLightSpeed": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "nullable": true,
                        "maximum": 100,
                        "exclusiveMaximum": true,
                        "minimum": 0
                    },
                    "Permission": {
                        "$ref": "/vocabularies/Org.OData.Core.V1.openapi3.json#/components/schemas/Org.OData.Core.V1.Permission"
                    },
                    "AliasPermission": {
                        "anyOf": [
                            {
                                "$ref": "/vocabularies/Org.OData.Core.V1.openapi3.json#/components/schemas/Org.OData.Core.V1.Permission"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "TheKey"
                ]
            },
            "Model1.Weird-update": {
                "title": "Weird (for update)",
                "type": "object",
                "properties": {
                    "TheValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "TheString": {
                        "type": "string",
                        "maxLength": 20,
                        "enum": [
                            "success",
                            "info",
                            "warning",
                            "error"
                        ],
                        "nullable": true
                    },
                    "Tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "Dates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date",
                            "example": "2017-04-13",
                            "nullable": true
                        }
                    },
                    "Price": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.001,
                        "maximum": 999999999999.999,
                        "minimum": 0,
                        "nullable": true
                    },
                    "Quantity": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.001,
                        "maximum": 999999999999.999,
                        "minimum": 0,
                        "nullable": true,
                        "exclusiveMinimum": true
                    },
                    "PercentComplete": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1,
                        "maximum": 100,
                        "minimum": 0,
                        "nullable": true
                    },
                    "PercentOfLightSpeed": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "nullable": true,
                        "maximum": 100,
                        "exclusiveMaximum": true,
                        "minimum": 0
                    },
                    "Permission": {
                        "$ref": "/vocabularies/Org.OData.Core.V1.openapi3.json#/components/schemas/Org.OData.Core.V1.Permission"
                    },
                    "AliasPermission": {
                        "anyOf": [
                            {
                                "$ref": "/vocabularies/Org.OData.Core.V1.openapi3.json#/components/schemas/Org.OData.Core.V1.Permission"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Model1.Address": {
                "title": "Address",
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true
                    },
                    "City": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.City"
                            }
                        ],
                        "nullable": true
                    },
                    "Region": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Region"
                            }
                        ],
                        "nullable": true
                    },
                    "Country": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Country"
                            }
                        ],
                        "nullable": true
                    },
                    "MapLocation": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "nullable": true
                    },
                    "Numbers": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int16"
                        }
                    }
                }
            },
            "Model1.Address-create": {
                "title": "Address (for create)",
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true
                    },
                    "City": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.City-create"
                            }
                        ],
                        "nullable": true
                    },
                    "Region": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Region-create"
                            }
                        ],
                        "nullable": true
                    },
                    "Country": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Country-create"
                            }
                        ],
                        "nullable": true
                    },
                    "MapLocation": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "nullable": true
                    },
                    "Numbers": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int16"
                        }
                    }
                }
            },
            "Model1.Address-update": {
                "title": "Address (for update)",
                "type": "object",
                "properties": {
                    "Street": {
                        "type": "string",
                        "nullable": true
                    },
                    "MapLocation": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/geoPoint"
                            }
                        ],
                        "nullable": true
                    },
                    "Numbers": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int16"
                        }
                    }
                }
            },
            "Model1.City": {
                "title": "City",
                "type": "object"
            },
            "Model1.City-create": {
                "title": "City (for create)",
                "type": "object"
            },
            "Model1.City-update": {
                "title": "City (for update)",
                "type": "object"
            },
            "Model1.Region": {
                "title": "Region",
                "type": "object"
            },
            "Model1.Region-create": {
                "title": "Region (for create)",
                "type": "object"
            },
            "Model1.Region-update": {
                "title": "Region (for update)",
                "type": "object"
            },
            "Model1.Country": {
                "title": "Country",
                "type": "object"
            },
            "Model1.Country-create": {
                "title": "Country (for create)",
                "type": "object"
            },
            "Model1.Country-update": {
                "title": "Country (for update)",
                "type": "object"
            },
            "Model1.Planet": {
                "title": "Planet",
                "type": "object"
            },
            "Model1.Planet-create": {
                "title": "Planet (for create)",
                "type": "object"
            },
            "Model1.Planet-update": {
                "title": "Planet (for update)",
                "type": "object"
            },
            "Model1.NavigationOnly": {
                "title": "NavigationOnly",
                "type": "object",
                "properties": {
                    "Planet": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Planet"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Model1.NavigationOnly-create": {
                "title": "NavigationOnly (for create)",
                "type": "object",
                "properties": {
                    "Planet": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Model1.Planet-create"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Model1.NavigationOnly-update": {
                "title": "NavigationOnly (for update)",
                "type": "object"
            },
            "Model1.AnnotationOnly": {
                "title": "AnnotationOnly",
                "type": "object"
            },
            "Model1.AnnotationOnly-create": {
                "title": "AnnotationOnly (for create)",
                "type": "object"
            },
            "Model1.AnnotationOnly-update": {
                "title": "AnnotationOnly (for update)",
                "type": "object"
            },
            "Model1.Order": {
                "title": "Order",
                "type": "object",
                "properties": {
                    "Quantity": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1,
                        "nullable": true
                    },
                    "ShippingUnit": {
                        "type": "string",
                        "nullable": true,
                        "title": "Contains the unit for property Quantity"
                    }
                }
            },
            "Model1.Order-create": {
                "title": "Order (for create)",
                "type": "object",
                "properties": {
                    "Quantity": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1,
                        "nullable": true
                    },
                    "ShippingUnit": {
                        "type": "string",
                        "nullable": true,
                        "title": "Contains the unit for property Quantity"
                    }
                }
            },
            "Model1.Order-update": {
                "title": "Order (for update)",
                "type": "object",
                "properties": {
                    "Quantity": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 1,
                        "nullable": true
                    },
                    "ShippingUnit": {
                        "type": "string",
                        "nullable": true,
                        "title": "Contains the unit for property Quantity"
                    }
                }
            },
            "Model1.SpecialByte": {
                "type": "integer",
                "format": "uint8",
                "title": "SpecialByte"
            },
            "Model1.Text50": {
                "type": "string",
                "maxLength": 50,
                "title": "Text50"
            },
            "Model1.Text": {
                "type": "string",
                "title": "Text"
            },
            "Model1.LanguageDependentText": {
                "type": "string",
                "title": "LanguageDependentText"
            },
            "Model1.IntegerDecimal": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "format": "decimal",
                "example": 0,
                "multipleOf": 1,
                "title": "A decimal without fractional part"
            },
            "Model1.IntegerDecimal10": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "format": "decimal",
                "example": 0,
                "multipleOf": 1,
                "maximum": 9999999999,
                "minimum": -9999999999,
                "title": "A ten-digit integer"
            },
            "Model1.VariableDecimal": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "format": "decimal",
                "example": 0,
                "title": "A floating decimal"
            },
            "Model1.ExactTimestamp": {
                "type": "string",
                "format": "date-time",
                "example": "2017-04-13T15:51:04.000000000000Z",
                "title": "ExactTimestamp"
            },
            "X.PersonType": {
                "title": "PersonType",
                "type": "object",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Y.DeveloperType"
                    },
                    {}
                ]
            },
            "X.PersonType-create": {
                "title": "PersonType (for create)",
                "type": "object",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Y.DeveloperType-create"
                    },
                    {}
                ]
            },
            "X.PersonType-update": {
                "title": "PersonType (for update)",
                "type": "object",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Y.DeveloperType-update"
                    },
                    {}
                ]
            },
            "X.MovieType": {
                "title": "MovieType",
                "type": "object",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Y.ArchivedMovieType"
                    },
                    {}
                ]
            },
            "X.MovieType-create": {
                "title": "MovieType (for create)",
                "type": "object",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Y.ArchivedMovieType-create"
                    },
                    {}
                ]
            },
            "X.MovieType-update": {
                "title": "MovieType (for update)",
                "type": "object",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/Y.ArchivedMovieType-update"
                    },
                    {}
                ]
            },
            "X.FriendType": {
                "title": "FriendType",
                "type": "object"
            },
            "X.FriendType-create": {
                "title": "FriendType (for create)",
                "type": "object"
            },
            "X.FriendType-update": {
                "title": "FriendType (for update)",
                "type": "object"
            },
            "Y.DeveloperType": {
                "title": "DeveloperType",
                "type": "object"
            },
            "Y.DeveloperType-create": {
                "title": "DeveloperType (for create)",
                "type": "object"
            },
            "Y.DeveloperType-update": {
                "title": "DeveloperType (for update)",
                "type": "object"
            },
            "Y.ScrumTeamType": {
                "title": "ScrumTeamType",
                "type": "object",
                "properties": {
                    "ScrumMaster": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Y.DeveloperType"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Y.ScrumTeamType-create": {
                "title": "ScrumTeamType (for create)",
                "type": "object",
                "properties": {
                    "ScrumMaster": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Y.DeveloperType-create"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Y.ScrumTeamType-update": {
                "title": "ScrumTeamType (for update)",
                "type": "object",
                "properties": {
                    "ScrumMaster": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Y.DeveloperType-update"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Y.ArchivedMovieType": {
                "title": "ArchivedMovieType",
                "type": "object",
                "properties": {
                    "ArchivedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "nullable": true
                    }
                }
            },
            "Y.ArchivedMovieType-create": {
                "title": "ArchivedMovieType (for create)",
                "type": "object",
                "properties": {
                    "ArchivedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "nullable": true
                    }
                }
            },
            "Y.ArchivedMovieType-update": {
                "title": "ArchivedMovieType (for update)",
                "type": "object",
                "properties": {
                    "ArchivedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-04-13",
                        "nullable": true
                    }
                }
            },
            "Y.SomeThingType": {
                "title": "SomeThingType",
                "type": "object",
                "properties": {
                    "SomeProperty": {
                        "type": "string",
                        "nullable": true
                    },
                    "Contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/X.PersonType"
                        }
                    },
                    "VIPs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/X.FriendType"
                        }
                    },
                    "VIPs@odata.count": {
                        "$ref": "#/components/schemas/count"
                    }
                }
            },
            "Y.SomeThingType-create": {
                "title": "SomeThingType (for create)",
                "type": "object",
                "properties": {
                    "SomeProperty": {
                        "type": "string",
                        "nullable": true
                    },
                    "Contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/X.PersonType-create"
                        }
                    },
                    "VIPs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/X.FriendType-create"
                        }
                    }
                }
            },
            "Y.SomeThingType-update": {
                "title": "SomeThingType (for update)",
                "type": "object",
                "properties": {
                    "SomeProperty": {
                        "type": "string",
                        "nullable": true
                    },
                    "Contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/X.PersonType-update"
                        }
                    }
                }
            },
            "Y.ChangeTrackingType": {
                "title": "ChangeTrackingType",
                "type": "object",
                "properties": {
                    "InlineableStreamProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Change tracking supports inlining these stream properties"
                    }
                }
            },
            "Y.ChangeTrackingType-create": {
                "title": "ChangeTrackingType (for create)",
                "type": "object",
                "properties": {
                    "InlineableStreamProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Change tracking supports inlining these stream properties"
                    }
                }
            },
            "Y.ChangeTrackingType-update": {
                "title": "ChangeTrackingType (for update)",
                "type": "object",
                "properties": {
                    "InlineableStreamProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Change tracking supports inlining these stream properties"
                    }
                }
            },
            "geoPoint": {
                "type": "object",
                "properties": {
                    "coordinates": {
                        "$ref": "#/components/schemas/geoPosition"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Point"
                        ],
                        "default": "Point"
                    }
                },
                "required": [
                    "type",
                    "coordinates"
                ]
            },
            "geoPosition": {
                "type": "array",
                "minItems": 2,
                "items": {
                    "type": "number"
                }
            },
            "count": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
            },
            "error": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "type": "object",
                        "required": [
                            "code",
                            "message"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "target": {
                                "type": "string"
                            },
                            "details": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "target": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "innererror": {
                                "type": "object",
                                "description": "The structure of this object is service-specific"
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "top": {
                "name": "$top",
                "in": "query",
                "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "example": 50
            },
            "skip": {
                "name": "$skip",
                "in": "query",
                "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "count": {
                "name": "$count",
                "in": "query",
                "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
                "schema": {
                    "type": "boolean"
                }
            },
            "search": {
                "name": "$search",
                "in": "query",
                "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "error": {
                "description": "Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                }
            }
        }
    }
}