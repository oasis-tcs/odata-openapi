{
    "openapi": "3.0.2",
    "info": {
        "title": "Service for namespace Supported.Annotations",
        "description": "This service is located at [https://localhost/service-root/](https://localhost/service-root/)\n\n## Entity Data Model\n![ER Diagram](https://yuml.me/diagram/class/[SinglePartKey{bg:lightslategray}],[SinglePartKey]-0..1>[TwoPartKey],[SinglePartKey]-*>[TwoPartKey],[SinglePartKey]-0..1>[TwoPartKey],[SinglePartKey]-*>[TwoPartKey],[SinglePartKey]-0..1>[TwoPartKey],[SinglePartKey]-*>[TwoPartKey],[TwoPartKey{bg:lightslategray}],[TwoNothingSingleton%20{bg:lawngreen}]++->[TwoPartKey],[TwoWriteOnlySingleton%20{bg:lawngreen}]++->[TwoPartKey],[TwoNothingSet%20{bg:lawngreen}]++-*>[TwoPartKey],[TwoWriteOnlySet%20{bg:lawngreen}]++-*>[TwoPartKey],[TwoReadOnlyByKeySet%20{bg:lawngreen}]++-*>[TwoPartKey],[TwoReadOnlySet%20{bg:lawngreen}]++-*>[TwoPartKey],[TwoAllSet%20{bg:lawngreen}]++-*>[TwoPartKey],[ReadOnlySingleton%20{bg:lawngreen}]++->[SinglePartKey],[AllSingleton%20{bg:lawngreen}]++->[SinglePartKey],[ReadListOnlySet%20{bg:lawngreen}]++-*>[SinglePartKey],[OneNavigationSet%20{bg:lawngreen}]++-*>[SinglePartKey],[NoNavigationSet%20{bg:lawngreen}]++-*>[SinglePartKey],[AllSet%20{bg:lawngreen}]++-*>[SinglePartKey])\n\n### Legend\n![Legend](https://yuml.me/diagram/plain;dir:TB;scale:60/class/[External.Type{bg:whitesmoke}],[ComplexType],[EntityType{bg:lightslategray}],[EntitySet/Singleton/Operation{bg:lawngreen}])",
        "version": ""
    },
    "servers": [
        {
            "url": "https://localhost/service-root"
        }
    ],
    "tags": [
        {
            "name": "AllSet"
        },
        {
            "name": "NoNavigationSet"
        },
        {
            "name": "OneNavigationSet"
        },
        {
            "name": "ReadListOnlySet"
        },
        {
            "name": "AllSingleton",
            "description": "First Singleton"
        },
        {
            "name": "ReadOnlySingleton"
        },
        {
            "name": "TwoAllSet"
        },
        {
            "name": "TwoReadOnlySet"
        },
        {
            "name": "TwoReadOnlyByKeySet"
        },
        {
            "name": "TwoWriteOnlySet"
        },
        {
            "name": "TwoNothingSet"
        },
        {
            "name": "TwoWriteOnlySingleton"
        },
        {
            "name": "TwoNothingSingleton"
        }
    ],
    "paths": {
        "/AllSet": {
            "get": {
                "summary": "Get entities from AllSet",
                "tags": [
                    "AllSet"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)\n\nRequired filter properties:\n- RequiredInFilter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "Pattern",
                                    "Pattern desc",
                                    "PatternExt",
                                    "PatternExt desc",
                                    "AllowedValues",
                                    "AllowedValues desc",
                                    "AllowedValuesExt",
                                    "AllowedValuesExt desc",
                                    "Maximum",
                                    "Maximum desc",
                                    "MaximumExt",
                                    "MaximumExt desc",
                                    "Minimum",
                                    "Minimum desc",
                                    "MinimumExt",
                                    "MinimumExt desc",
                                    "ExampleExt",
                                    "ExampleExt desc",
                                    "Computed",
                                    "Computed desc",
                                    "ComputedExt",
                                    "ComputedExt desc",
                                    "Immutable",
                                    "Immutable desc",
                                    "RequiredInFilter",
                                    "RequiredInFilter desc",
                                    "ImmutableExt",
                                    "ImmutableExt desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Pattern",
                                    "PatternExt",
                                    "AllowedValues",
                                    "AllowedValuesExt",
                                    "Maximum",
                                    "MaximumExt",
                                    "Minimum",
                                    "MinimumExt",
                                    "Example",
                                    "ExampleExt",
                                    "Computed",
                                    "ComputedExt",
                                    "Immutable",
                                    "RequiredInFilter",
                                    "ImmutableExt"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "AllOne",
                                    "AllMany",
                                    "ReadOnlyOne",
                                    "ReadOnlyMany",
                                    "NothingOne",
                                    "NothingMany"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of SinglePartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to AllSet",
                "tags": [
                    "AllSet"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSet('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from AllSet by key",
                "tags": [
                    "AllSet"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Pattern",
                                    "PatternExt",
                                    "AllowedValues",
                                    "AllowedValuesExt",
                                    "Maximum",
                                    "MaximumExt",
                                    "Minimum",
                                    "MinimumExt",
                                    "Example",
                                    "ExampleExt",
                                    "Computed",
                                    "ComputedExt",
                                    "Immutable",
                                    "RequiredInFilter",
                                    "ImmutableExt"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "AllOne",
                                    "AllMany",
                                    "ReadOnlyOne",
                                    "ReadOnlyMany",
                                    "NothingOne",
                                    "NothingMany"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in AllSet",
                "tags": [
                    "AllSet"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from AllSet",
                "tags": [
                    "AllSet"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSet('{ID}')/AllOne": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get related AllOne",
                "tags": [
                    "AllSet",
                    "TwoAllSet"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSet('{ID}')/AllMany": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related AllMany",
                "tags": [
                    "AllSet",
                    "TwoAllSet"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "One desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related AllMany",
                "tags": [
                    "AllSet",
                    "TwoAllSet"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSet('{ID}')/ReadOnlyOne": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get related ReadOnlyOne",
                "tags": [
                    "AllSet",
                    "TwoReadOnlySet"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSet('{ID}')/ReadOnlyMany": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related ReadOnlyMany",
                "tags": [
                    "AllSet",
                    "TwoReadOnlySet"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSet('{ID}')/NothingOne": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/AllSet('{ID}')/NothingMany": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/NoNavigationSet": {
            "get": {
                "summary": "Get entities from NoNavigationSet",
                "tags": [
                    "NoNavigationSet"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "Pattern",
                                    "Pattern desc",
                                    "PatternExt",
                                    "PatternExt desc",
                                    "AllowedValues",
                                    "AllowedValues desc",
                                    "AllowedValuesExt",
                                    "AllowedValuesExt desc",
                                    "Maximum",
                                    "Maximum desc",
                                    "MaximumExt",
                                    "MaximumExt desc",
                                    "Minimum",
                                    "Minimum desc",
                                    "MinimumExt",
                                    "MinimumExt desc",
                                    "Example",
                                    "Example desc",
                                    "ExampleExt",
                                    "ExampleExt desc",
                                    "Computed",
                                    "Computed desc",
                                    "ComputedExt",
                                    "ComputedExt desc",
                                    "Immutable",
                                    "Immutable desc",
                                    "RequiredInFilter",
                                    "RequiredInFilter desc",
                                    "ImmutableExt",
                                    "ImmutableExt desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Pattern",
                                    "PatternExt",
                                    "AllowedValues",
                                    "AllowedValuesExt",
                                    "Maximum",
                                    "MaximumExt",
                                    "Minimum",
                                    "MinimumExt",
                                    "Example",
                                    "ExampleExt",
                                    "Computed",
                                    "ComputedExt",
                                    "Immutable",
                                    "RequiredInFilter",
                                    "ImmutableExt"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "AllOne",
                                    "AllMany",
                                    "ReadOnlyOne",
                                    "ReadOnlyMany",
                                    "NothingOne",
                                    "NothingMany"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of SinglePartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to NoNavigationSet",
                "tags": [
                    "NoNavigationSet"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/NoNavigationSet('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from NoNavigationSet by key",
                "tags": [
                    "NoNavigationSet"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Pattern",
                                    "PatternExt",
                                    "AllowedValues",
                                    "AllowedValuesExt",
                                    "Maximum",
                                    "MaximumExt",
                                    "Minimum",
                                    "MinimumExt",
                                    "Example",
                                    "ExampleExt",
                                    "Computed",
                                    "ComputedExt",
                                    "Immutable",
                                    "RequiredInFilter",
                                    "ImmutableExt"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "AllOne",
                                    "AllMany",
                                    "ReadOnlyOne",
                                    "ReadOnlyMany",
                                    "NothingOne",
                                    "NothingMany"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in NoNavigationSet",
                "tags": [
                    "NoNavigationSet"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from NoNavigationSet",
                "tags": [
                    "NoNavigationSet"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/OneNavigationSet": {
            "get": {
                "summary": "Get entities from OneNavigationSet",
                "tags": [
                    "OneNavigationSet"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "ID desc",
                                    "Pattern",
                                    "Pattern desc",
                                    "PatternExt",
                                    "PatternExt desc",
                                    "AllowedValues",
                                    "AllowedValues desc",
                                    "AllowedValuesExt",
                                    "AllowedValuesExt desc",
                                    "Maximum",
                                    "Maximum desc",
                                    "MaximumExt",
                                    "MaximumExt desc",
                                    "Minimum",
                                    "Minimum desc",
                                    "MinimumExt",
                                    "MinimumExt desc",
                                    "Example",
                                    "Example desc",
                                    "ExampleExt",
                                    "ExampleExt desc",
                                    "Computed",
                                    "Computed desc",
                                    "ComputedExt",
                                    "ComputedExt desc",
                                    "Immutable",
                                    "Immutable desc",
                                    "RequiredInFilter",
                                    "RequiredInFilter desc",
                                    "ImmutableExt",
                                    "ImmutableExt desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Pattern",
                                    "PatternExt",
                                    "AllowedValues",
                                    "AllowedValuesExt",
                                    "Maximum",
                                    "MaximumExt",
                                    "Minimum",
                                    "MinimumExt",
                                    "Example",
                                    "ExampleExt",
                                    "Computed",
                                    "ComputedExt",
                                    "Immutable",
                                    "RequiredInFilter",
                                    "ImmutableExt"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "AllOne",
                                    "AllMany",
                                    "ReadOnlyOne",
                                    "ReadOnlyMany",
                                    "NothingOne",
                                    "NothingMany"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of SinglePartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/OneNavigationSet('{ID}')": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from OneNavigationSet by key",
                "tags": [
                    "OneNavigationSet"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Pattern",
                                    "PatternExt",
                                    "AllowedValues",
                                    "AllowedValuesExt",
                                    "Maximum",
                                    "MaximumExt",
                                    "Minimum",
                                    "MinimumExt",
                                    "Example",
                                    "ExampleExt",
                                    "Computed",
                                    "ComputedExt",
                                    "Immutable",
                                    "RequiredInFilter",
                                    "ImmutableExt"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "AllOne",
                                    "AllMany",
                                    "ReadOnlyOne",
                                    "ReadOnlyMany",
                                    "NothingOne",
                                    "NothingMany"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/OneNavigationSet('{ID}')/AllMany": {
            "parameters": [
                {
                    "description": "key: ID",
                    "in": "path",
                    "name": "ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get entities from related AllMany",
                "tags": [
                    "OneNavigationSet"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "One desc",
                                    "Two",
                                    "Two desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/ReadListOnlySet": {
            "get": {
                "summary": "Supports only read-list",
                "tags": [
                    "ReadListOnlySet"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of SinglePartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "description": "Does not support any query options"
            }
        },
        "/AllSingleton": {
            "get": {
                "summary": "Get AllSingleton",
                "tags": [
                    "AllSingleton"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ID",
                                    "Pattern",
                                    "PatternExt",
                                    "AllowedValues",
                                    "AllowedValuesExt",
                                    "Maximum",
                                    "MaximumExt",
                                    "Minimum",
                                    "MinimumExt",
                                    "Example",
                                    "ExampleExt",
                                    "Computed",
                                    "ComputedExt",
                                    "Immutable",
                                    "RequiredInFilter",
                                    "ImmutableExt"
                                ]
                            }
                        }
                    },
                    {
                        "name": "expand",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "*",
                                    "AllOne",
                                    "AllMany",
                                    "ReadOnlyOne",
                                    "ReadOnlyMany",
                                    "NothingOne",
                                    "NothingMany"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update AllSingleton",
                "tags": [
                    "AllSingleton"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSingleton/AllOne": {
            "get": {
                "summary": "Get related AllOne",
                "tags": [
                    "AllSingleton",
                    "TwoAllSet"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSingleton/AllMany": {
            "get": {
                "summary": "Get entities from related AllMany",
                "tags": [
                    "AllSingleton",
                    "TwoAllSet"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "One desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related AllMany",
                "tags": [
                    "AllSingleton",
                    "TwoAllSet"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSingleton/ReadOnlyOne": {
            "get": {
                "summary": "Get related ReadOnlyOne",
                "tags": [
                    "AllSingleton",
                    "TwoReadOnlySet"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSingleton/ReadOnlyMany": {
            "get": {
                "summary": "Get entities from related ReadOnlyMany",
                "tags": [
                    "AllSingleton",
                    "TwoReadOnlySet"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/AllSingleton/NothingOne": {},
        "/AllSingleton/NothingMany": {},
        "/ReadOnlySingleton": {
            "get": {
                "summary": "Supports only read",
                "tags": [
                    "ReadOnlySingleton"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.SinglePartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "description": "Does not support `$select` and `$expand`"
            }
        },
        "/ReadOnlySingleton/AllOne": {
            "get": {
                "summary": "Get related AllOne",
                "tags": [
                    "ReadOnlySingleton",
                    "TwoAllSet"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/ReadOnlySingleton/AllMany": {
            "get": {
                "summary": "Get entities from related AllMany",
                "tags": [
                    "ReadOnlySingleton",
                    "TwoAllSet"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "Two",
                                    "Two desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/ReadOnlySingleton/ReadOnlyOne": {
            "get": {
                "summary": "Get related ReadOnlyOne",
                "tags": [
                    "ReadOnlySingleton",
                    "TwoReadOnlySet"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/ReadOnlySingleton/ReadOnlyMany": {
            "get": {
                "summary": "Get entities from related ReadOnlyMany",
                "tags": [
                    "ReadOnlySingleton",
                    "TwoReadOnlySet"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related ReadOnlyMany",
                "tags": [
                    "ReadOnlySingleton",
                    "TwoReadOnlySet"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/ReadOnlySingleton/NothingOne": {},
        "/ReadOnlySingleton/NothingMany": {
            "get": {
                "summary": "Get entities from related NothingMany",
                "tags": [
                    "ReadOnlySingleton",
                    "TwoNothingSet"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "One desc",
                                    "Two",
                                    "Two desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TwoAllSet": {
            "get": {
                "summary": "Get entities from TwoAllSet",
                "tags": [
                    "TwoAllSet"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "orderby",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "One desc"
                                ]
                            }
                        }
                    },
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to TwoAllSet",
                "tags": [
                    "TwoAllSet"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TwoAllSet(One={One},Two={Two})": {
            "parameters": [
                {
                    "description": "key: One",
                    "in": "path",
                    "name": "One",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                {
                    "description": "key: Two",
                    "in": "path",
                    "name": "Two",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from TwoAllSet by key",
                "tags": [
                    "TwoAllSet"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in TwoAllSet",
                "tags": [
                    "TwoAllSet"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from TwoAllSet",
                "tags": [
                    "TwoAllSet"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TwoReadOnlySet": {
            "get": {
                "summary": "Supports read-list",
                "tags": [
                    "TwoReadOnlySet"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Collection of TwoPartKey",
                                    "properties": {
                                        "@count": {
                                            "$ref": "#/components/schemas/count"
                                        },
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "description": "Does not support any query options"
            }
        },
        "/TwoReadOnlySet(One={One},Two={Two})": {
            "parameters": [
                {
                    "description": "key: One",
                    "in": "path",
                    "name": "One",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                {
                    "description": "key: Two",
                    "in": "path",
                    "name": "Two",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from TwoReadOnlySet by key",
                "tags": [
                    "TwoReadOnlySet"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TwoReadOnlyByKeySet": {},
        "/TwoReadOnlyByKeySet(One={One},Two={Two})": {
            "parameters": [
                {
                    "description": "key: One",
                    "in": "path",
                    "name": "One",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                {
                    "description": "key: Two",
                    "in": "path",
                    "name": "Two",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Get entity from TwoReadOnlyByKeySet by key",
                "tags": [
                    "TwoReadOnlyByKeySet"
                ],
                "parameters": [
                    {
                        "name": "select",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "in": "query",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string",
                                "enum": [
                                    "One",
                                    "Two"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TwoWriteOnlySet": {
            "post": {
                "summary": "Supports insert",
                "tags": [
                    "TwoWriteOnlySet"
                ],
                "requestBody": {
                    "description": "New entity",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TwoWriteOnlySet(One={One},Two={Two})": {
            "parameters": [
                {
                    "description": "key: One",
                    "in": "path",
                    "name": "One",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                {
                    "description": "key: Two",
                    "in": "path",
                    "name": "Two",
                    "required": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "patch": {
                "summary": "Supports update",
                "tags": [
                    "TwoWriteOnlySet"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Supports delete",
                "tags": [
                    "TwoWriteOnlySet"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TwoNothingSet": {},
        "/TwoWriteOnlySingleton": {
            "patch": {
                "summary": "Supports update",
                "tags": [
                    "TwoWriteOnlySingleton"
                ],
                "requestBody": {
                    "description": "New property values",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-update"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    }
                }
            }
        },
        "/TwoNothingSingleton": {}
    },
    "components": {
        "schemas": {
            "Supported.Annotations.SinglePartKey": {
                "title": "SinglePartKey",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Pattern": {
                        "type": "string",
                        "pattern": "^.+$",
                        "nullable": true
                    },
                    "PatternExt": {
                        "type": "string",
                        "pattern": "^.+$",
                        "nullable": true
                    },
                    "AllowedValues": {
                        "type": "string",
                        "enum": [
                            "red",
                            "green",
                            "blue"
                        ],
                        "nullable": true
                    },
                    "AllowedValuesExt": {
                        "type": "string",
                        "enum": [
                            "red",
                            "green",
                            "blue"
                        ],
                        "nullable": true
                    },
                    "Maximum": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "maximum": 0,
                        "minimum": -99999,
                        "nullable": true,
                        "exclusiveMaximum": true
                    },
                    "MaximumExt": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": -1,
                        "nullable": true,
                        "maximum": -1
                    },
                    "Minimum": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.01,
                        "maximum": 999.99,
                        "minimum": 1,
                        "nullable": true
                    },
                    "MinimumExt": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 1,
                        "multipleOf": 0.00001,
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    "Example": {
                        "type": "string",
                        "nullable": true,
                        "example": "Hello World"
                    },
                    "ExampleExt": {
                        "type": "string",
                        "nullable": true,
                        "example": "Hello external World"
                    },
                    "Computed": {
                        "type": "string",
                        "nullable": true
                    },
                    "ComputedExt": {
                        "type": "string",
                        "nullable": true
                    },
                    "Immutable": {
                        "type": "string",
                        "nullable": true
                    },
                    "RequiredInFilter": {
                        "type": "string",
                        "nullable": true
                    },
                    "ImmutableExt": {
                        "type": "string",
                        "nullable": true
                    },
                    "AllOne": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                            }
                        ],
                        "nullable": true
                    },
                    "AllMany": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                        }
                    },
                    "AllMany@count": {
                        "$ref": "#/components/schemas/count"
                    },
                    "ReadOnlyOne": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                            }
                        ],
                        "nullable": true
                    },
                    "ReadOnlyMany": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                        }
                    },
                    "ReadOnlyMany@count": {
                        "$ref": "#/components/schemas/count"
                    },
                    "NothingOne": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                            }
                        ],
                        "nullable": true
                    },
                    "NothingMany": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey"
                        }
                    },
                    "NothingMany@count": {
                        "$ref": "#/components/schemas/count"
                    }
                }
            },
            "Supported.Annotations.SinglePartKey-create": {
                "title": "SinglePartKey (for create)",
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Pattern": {
                        "type": "string",
                        "pattern": "^.+$",
                        "nullable": true
                    },
                    "PatternExt": {
                        "type": "string",
                        "pattern": "^.+$",
                        "nullable": true
                    },
                    "AllowedValues": {
                        "type": "string",
                        "enum": [
                            "red",
                            "green",
                            "blue"
                        ],
                        "nullable": true
                    },
                    "AllowedValuesExt": {
                        "type": "string",
                        "enum": [
                            "red",
                            "green",
                            "blue"
                        ],
                        "nullable": true
                    },
                    "Maximum": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "maximum": 0,
                        "minimum": -99999,
                        "nullable": true,
                        "exclusiveMaximum": true
                    },
                    "MaximumExt": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": -1,
                        "nullable": true,
                        "maximum": -1
                    },
                    "Minimum": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.01,
                        "maximum": 999.99,
                        "minimum": 1,
                        "nullable": true
                    },
                    "MinimumExt": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 1,
                        "multipleOf": 0.00001,
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    "Example": {
                        "type": "string",
                        "nullable": true,
                        "example": "Hello World"
                    },
                    "ExampleExt": {
                        "type": "string",
                        "nullable": true,
                        "example": "Hello external World"
                    },
                    "Immutable": {
                        "type": "string",
                        "nullable": true
                    },
                    "RequiredInFilter": {
                        "type": "string",
                        "nullable": true
                    },
                    "ImmutableExt": {
                        "type": "string",
                        "nullable": true
                    },
                    "AllOne": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                            }
                        ],
                        "nullable": true
                    },
                    "AllMany": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                        }
                    },
                    "ReadOnlyOne": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                            }
                        ],
                        "nullable": true
                    },
                    "ReadOnlyMany": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                        }
                    },
                    "NothingOne": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                            }
                        ],
                        "nullable": true
                    },
                    "NothingMany": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supported.Annotations.TwoPartKey-create"
                        }
                    }
                },
                "required": [
                    "ID"
                ]
            },
            "Supported.Annotations.SinglePartKey-update": {
                "title": "SinglePartKey (for update)",
                "type": "object",
                "properties": {
                    "Pattern": {
                        "type": "string",
                        "pattern": "^.+$",
                        "nullable": true
                    },
                    "PatternExt": {
                        "type": "string",
                        "pattern": "^.+$",
                        "nullable": true
                    },
                    "AllowedValues": {
                        "type": "string",
                        "enum": [
                            "red",
                            "green",
                            "blue"
                        ],
                        "nullable": true
                    },
                    "AllowedValuesExt": {
                        "type": "string",
                        "enum": [
                            "red",
                            "green",
                            "blue"
                        ],
                        "nullable": true
                    },
                    "Maximum": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "maximum": 0,
                        "minimum": -99999,
                        "nullable": true,
                        "exclusiveMaximum": true
                    },
                    "MaximumExt": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": -1,
                        "nullable": true,
                        "maximum": -1
                    },
                    "Minimum": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 0,
                        "multipleOf": 0.01,
                        "maximum": 999.99,
                        "minimum": 1,
                        "nullable": true
                    },
                    "MinimumExt": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "format": "decimal",
                        "example": 1,
                        "multipleOf": 0.00001,
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    "Example": {
                        "type": "string",
                        "nullable": true,
                        "example": "Hello World"
                    },
                    "ExampleExt": {
                        "type": "string",
                        "nullable": true,
                        "example": "Hello external World"
                    },
                    "RequiredInFilter": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Supported.Annotations.TwoPartKey": {
                "title": "TwoPartKey",
                "type": "object",
                "properties": {
                    "One": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Two": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Supported.Annotations.TwoPartKey-create": {
                "title": "TwoPartKey (for create)",
                "type": "object",
                "properties": {
                    "One": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Two": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": [
                    "One",
                    "Two"
                ]
            },
            "Supported.Annotations.TwoPartKey-update": {
                "title": "TwoPartKey (for update)",
                "type": "object"
            },
            "count": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    }
                ],
                "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
            },
            "error": {
                "type": "object",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "type": "object",
                        "required": [
                            "code",
                            "message"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "target": {
                                "type": "string"
                            },
                            "details": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "target": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "innererror": {
                                "type": "object",
                                "description": "The structure of this object is service-specific"
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "top": {
                "name": "top",
                "in": "query",
                "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                },
                "example": 50
            },
            "skip": {
                "name": "skip",
                "in": "query",
                "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
                "schema": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "count": {
                "name": "count",
                "in": "query",
                "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
                "schema": {
                    "type": "boolean"
                }
            },
            "search": {
                "name": "search",
                "in": "query",
                "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "error": {
                "description": "Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                }
            }
        }
    }
}